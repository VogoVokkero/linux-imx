/*
 * Copyright (C) 2019 Variscite Ltd. - https://www.variscite.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/leds/common.h>

/ {
	/* UART Console*/
	chosen {
		stdout-path = &uart1;
	};

	/* Concerto BP*/
	/*keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>, <&pinctrl_gpio_keys_snvs>;

		back {
			gpios = <&gpio4 14 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_BACK>;
		};

		wakeup {
			gpios = <&gpio5 8 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_WAKEUP>;
			gpio-key,wakeup;
		};
	};*/

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;

		remote-R {
			gpios = <&gpio1 26 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_RED>;
			label = "remote-r";
		};
		remote-G {
			gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_GREEN>;
			label = "remote-g";
		};
		remote-B {
			gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_BLUE>;
			label = "remote-b";
			default-state = "on";
		};
		role-R {
			gpios = <&gpio3 6 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_RED>;
			label = "role-r";
		};
		role-G {
			gpios = <&gpio1 25 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_GREEN>;
			label = "role-g";
		};
		role-B {
			gpios = <&gpio1 27 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_BLUE>;
			label = "role-b";
			default-state = "on";
		};
		main {
			gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_BLUE>;
			label = "main";
			default-state = "on";
		};
		backup {
			gpios = <&gpio3 5 GPIO_ACTIVE_HIGH>;
			color = <LED_COLOR_ID_BLUE>;
			label = "backup";
			default-state = "on";
		};
	};

	/* 7.1 audio */
	/*sound-cs42888 {
		compatible = "fsl,imx-audio-cs42888";
		model = "imx-cs42888";
		audio-cpu = <&esai>;
		audio-asrc = <&asrc>;
		#audio-codec = <&codec>;
		audio-routing =
			"Line Out Jack", "O1ALL",
			"Line Out Jack", "O2CR",
			"Line Out Jack", "O3ABCR",
			"Line Out Jack", "O4TBD",
			"Line Out Jack", "O5TBD",
			"Line Out Jack", "O6TBD",
			"Line Out Jack", "O7TBD",
			"Line Out Jack", "O8TBD",
			"I1TBD", "Line In Jack",
			"I2TBD", "Line In Jack",
			"I3TBD", "Line In Jack",
			"I4TBD", "Line In Jack";
	};*/
};

&fec1 {
	pinctrl-0 = <&pinctrl_enet1>, <&pinctrl_enet1_gpio>;
	/*/delete-node/ mdio;*/
};

&fec2 {
	status = "disabled";
	/*pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>, <&pinctrl_enet2_gpio>, <&pinctrl_enet2_mdio>;
	phy-mode = "rmii";
	phy-handle = <&ethphy1>;
	phy-reset-gpios=<&gpio5 5 GPIO_ACTIVE_LOW>;
	phy-reset-duration=<100>;

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			micrel,rmii-reference-clock-select-25-mhz;
			micrel,led-mode = <1>;
			clocks = <&rmii_ref_clk>;
			clock-names = "rmii-ref";
			reg = <1>;
		};

		ethphy1: ethernet-phy@3 {
			compatible = "ethernet-phy-ieee802.3-c22";
			micrel,rmii-reference-clock-select-25-mhz;
			micrel,led-mode = <0>;
			clocks = <&rmii_ref_clk>;
			clock-names = "rmii-ref";
			reg = <3>;
		};
	};*/
};

/*I2C for RTC*/
&i2c1 {
	clock_frequency = <400000>;			//<100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	// ISL12057 RTC module
	rtc@68 {
		compatible = "isil,isl12057";
		reg = <0x68>;
		pinctrl-names = "default";
	};

	// ISL12058 RTC module
	rtc@6f {
		compatible = "isil,isl12058";
		reg = <0x6f>;
		pinctrl-names = "default";
	};
};

&iomuxc {
	// pinctrl_enet2: enet2grp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_ENET2_RX_EN__ENET2_RX_EN	0x1b0b0
	// 		MX6UL_PAD_ENET2_RX_ER__ENET2_RX_ER	0x1b0b0
	// 		MX6UL_PAD_ENET2_RX_DATA0__ENET2_RDATA00	0x1b0b0
	// 		MX6UL_PAD_ENET2_RX_DATA1__ENET2_RDATA01	0x1b0b0
	// 		MX6UL_PAD_ENET2_TX_EN__ENET2_TX_EN	0x1b0b0
	// 		MX6UL_PAD_ENET2_TX_DATA0__ENET2_TDATA00	0x1b0b0
	// 		MX6UL_PAD_ENET2_TX_DATA1__ENET2_TDATA01	0x1b0b0
	// 		MX6UL_PAD_ENET2_TX_CLK__ENET2_REF_CLK2	0x4001b031
	// 	>;
	// };

	// pinctrl_enet2_mdio: enet2_mdiogrp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_GPIO1_IO06__ENET2_MDIO	0x1b0b0
	// 		MX6UL_PAD_GPIO1_IO07__ENET2_MDC		0x1b0b0
	// 	>;
	// };

	// pinctrl_gpio_keys: gpio_keysgrp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_NAND_CE1_B__GPIO4_IO14	0x17059 /*BP Back */
	// 	>;
	// };
	/* will be top sync STM*/
	// pinctrl_gpio_leds: gpio_ledsgrp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_UART3_RX_DATA__GPIO1_IO25	0x1b0b0	/* GPLED2 */
	// 	>;
	// };

	pinctrl_gpio_leds: gpio_ledsgrp {
		fsl,pins = <
			MX6UL_PAD_GPIO1_IO05__GPIO1_IO05	0x1b0b0	/* LED Remote blue */
			MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0x1b0b0	/* LED Remote green */
			MX6UL_PAD_UART3_CTS_B__GPIO1_IO26	0x1b0b0	/* LED Remote red */
			MX6UL_PAD_UART3_RTS_B__GPIO1_IO27	0x1b0b0	/* LED Role blue */
			MX6UL_PAD_UART3_RX_DATA__GPIO1_IO25	0x1b0b0	/* LED Role green */
			MX6UL_PAD_LCD_DATA01__GPIO3_IO06	0x1b0b0	/* LED Role blue */
			MX6UL_PAD_LCD_DATA00__GPIO3_IO05	0x1b0b0	/* LED backup blue */
			MX6UL_PAD_LCD_DATA11__GPIO3_IO16	0x1b0b0	/* LED main blue */
		>;
	};

	/* I2C for RTC */
	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX6UL_PAD_CSI_PIXCLK__I2C1_SCL		0x4001b8b0
			MX6UL_PAD_CSI_MCLK__I2C1_SDA		0x4001b8b0
		>;
	};

	/* RTC IRQ --> will be clk STM32*/
	// pinctrl_rtc: rtcgrp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0x1b0b0 /* RTC alarm IRQ */
	// 	>;
	// };

	/* UARD debug console pinout*/
	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX	0x1b0b1
			MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX	0x1b0b1
		>;
	};

	/* UART STM <-> WEB (configurateur) */
	pinctrl_uart5: uart5grp {
		fsl,pins = <
			MX6UL_PAD_CSI_DATA00__UART5_DCE_TX	0x1b0b1
			MX6UL_PAD_CSI_DATA01__UART5_DCE_RX	0x1b0b1
			/*MX6UL_PAD_GPIO1_IO09__UART5_DCE_CTS	0x1b0b1
			MX6UL_PAD_GPIO1_IO08__UART5_DCE_RTS	0x1b0b1*/
		>;
	};

	// pinctrl_usb_otg1_id: usbotg1idgrp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_UART3_TX_DATA__ANATOP_OTG1_ID	0x17059
	// 	>;
	// };

	/*pinctrl_wdog: wdoggrp {
		fsl,pins = <
			MX6UL_PAD_GPIO1_IO01__WDOG1_WDOG_B	0x78b0
		>;
	};*/

	/*pinctrl_esai: esaigrp {
		fsl,pins = <
			MX6ULL_PAD_CSI_DATA05__ESAI_TX_CLK 	0x1b030
			MX6ULL_PAD_CSI_DATA04__ESAI_TX_FS   0x1b030
			MX6ULL_PAD_CSI_MCLK__ESAI_TX3_RX2 	0x1b030
			MX6ULL_PAD_CSI_PIXCLK__ESAI_TX2_RX3 0x1b030
			MX6ULL_PAD_CSI_VSYNC__ESAI_TX4_RX1  0x1b030
			MX6ULL_PAD_CSI_DATA06__ESAI_TX5_RX0 0x1b030
			MX6ULL_PAD_CSI_DATA07__ESAI_T0      0x1b030
			MX6ULL_PAD_CSI_HSYNC__ESAI_TX1      0x1b030
			MX6ULL_PAD_CSI_DATA03__ESAI_RX_CLK  0x1b030
			MX6ULL_PAD_CSI_DATA02__ESAI_RX_FS   0x1b030
		>;
	};*/

	/* Audio SAI1 / I2S1 */
	pinctrl_sai1: sai1grp {
		fsl,pins = <
			MX6UL_PAD_CSI_DATA07__SAI1_TX_DATA	0x1f0b8
			MX6UL_PAD_CSI_DATA06__SAI1_RX_DATA	0x110b0
			MX6UL_PAD_CSI_DATA05__SAI1_TX_BCLK	0x1b0b0
			MX6UL_PAD_CSI_DATA04__SAI1_TX_SYNC	0x1b0b0
			MX6UL_PAD_CSI_DATA03__SAI1_RX_BCLK	0x1f0b8
			MX6UL_PAD_CSI_DATA02__SAI1_RX_SYNC	0x1f0b8
		>;
	};
	
	/* Audio SAI3 / I2S3 */
	// pinctrl_sai3: sai3grp {
	// 	fsl,pins = <
	// 		MX6UL_PAD_LCD_CLK__SAI3_MCLK		0x17088
	// 		MX6UL_PAD_LCD_DATA11__SAI3_RX_BCLK	0x17088
	// 		MX6UL_PAD_LCD_VSYNC__SAI3_RX_DATA	0x11088
	// 		MX6UL_PAD_LCD_DATA10__SAI3_RX_SYNC	0x11088
	// 		MX6UL_PAD_LCD_DATA13__SAI3_TX_BCLK	0x17088
	// 		MX6UL_PAD_LCD_RESET__SAI3_TX_DATA	0x11088
	// 		MX6UL_PAD_LCD_ENABLE__SAI3_TX_SYNC	0x17088
	// 	>;
	// };

	/* ECSPI 4 */
	pinctrl_ecspi4: ecspi4grp {
		fsl,pins = <
			MX6UL_PAD_ENET2_TX_DATA1__ECSPI4_SCLK	0x1b0b1 /*0x70a1*/
			MX6UL_PAD_ENET2_TX_EN__ECSPI4_MOSI	0x1b0b1	/*0x70a1*/
			MX6UL_PAD_ENET2_TX_CLK__ECSPI4_MISO	0x1b0b1	/*0x70a1*/
			/*MX6UL_PAD_ENET2_RX_ER__ECSPI4_SS0	0x1b0b1*/	/*0x70a1*/
		>;
	};

	/* ECSPI 2 */
	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			/* 0x1019=CMOS output, 50MHz, DSE=80Ohm, Fast Slew Rate */
			/* 0x1031=100k pull-down, Keeper enabled, 50MHz, Fast Slew Rate */
			MX6UL_PAD_UART4_RX_DATA__ECSPI2_SS0	0x1019	/* GPIO1_29 */
			MX6UL_PAD_UART5_TX_DATA__ECSPI2_MOSI	0x1019	/* CSPI_MOSI 1031 */
			MX6UL_PAD_UART5_RX_DATA__ECSPI2_MISO	0x1031	/* CSPI_MISO */
			MX6UL_PAD_UART4_TX_DATA__ECSPI2_SCLK	0x1019	/* CSPI_SCLK */
		>;
	};
};

&snvs_pwrkey {
	status = "disabled";
};

&snvs_rtc {
	status = "disabled";
};

&tsc {
	/*
	 * Conflics with wdog1 ext-reset-output & SD CD pins,
	 * so we keep it disabled by default
	 */
	status = "disabled";
};

//USB slave (configurator)
&usbotg1 {
	//pinctrl-names = "default";
	//pinctrl-0 = <&pinctrl_usb_otg1_id>;
	dr_mode = "otg";
	disable-over-current;
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

//USB host (for usb keys)
&usbotg2 {
	dr_mode = "host";
	disable-over-current;
	status = "okay";
};

/* Console UART */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

// &wdog1 {
// 	pinctrl-names = "default";
// 	pinctrl-0 = <&pinctrl_wdog>;
// 	/*
// 	 * To actually use ext-reset-output
// 	 * connect pins J17.3 & J17.8 on the Concerto-Board
// 	 */
// 	fsl,ext-reset-output;
// };

/*
&sai1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clks IMX6UL_CLK_SAI2_SEL>,
			  <&clks IMX6UL_CLK_SAI2>;
	assigned-clock-parents = <&clks IMX6UL_CLK_PLL4_AUDIO_DIV>;
	assigned-clock-rates = <0>, <12288000>;
	fsl,sai-mclk-direction-output;
	status = "okay";
};

&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clks IMX6UL_CLK_SAI2_SEL>,
			  <&clks IMX6UL_CLK_SAI2>;
	assigned-clock-parents = <&clks IMX6UL_CLK_PLL4_AUDIO_DIV>;
	assigned-clock-rates = <0>, <12288000>;
	fsl,sai-mclk-direction-output;
	status = "okay";
};
*/

/* SPI STM 32 : Master with Slave-Ready GPIO */
&ecspi4 {
	/*fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio2 15 0>;*/
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi4>;
	/*#address-cells = <0>;
	spi-slave;*/
	status = "okay";
	sready-gpios = <&gpio2 15 GPIO_ACTIVE_LOW>;

    /*slave{
        compatible = "spidev";
        spi-max-frequency = <4000000>;
		status = "okay";
    };*/
	spidev0: spi@0 {
		compatible = "var,spidev";
		spi-max-frequency = <4000000>;
		reg = <0>;
		status = "okay";
		sready-gpios = <&gpio2 15 GPIO_ACTIVE_LOW>;
    };
};

/* SPI AVBx7 : Master */
&ecspi2 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";

	spidev1: spi@0 {
        compatible = "var,spidev";
        spi-max-frequency = <4000000>;
        reg = <0>;
		status = "okay";
    };

	/*spi-slave;
	status = "okay";
	slave{
        compatible = "spidev";
        spi-max-frequency = <4000000>;
		reg = <0>;
		status = "okay";
    };*/
};

/*
&asrc {
	fsl,asrc-rate  = <48000>;
	status = "okay";
};
*/
